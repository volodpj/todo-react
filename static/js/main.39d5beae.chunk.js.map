{"version":3,"sources":["components/TodoContent.js","App.js","index.js"],"names":["TodoContent","props","console","log","react_default","a","createElement","className","id","type","htmlFor","Object","keys","todoList","map","todo","key","onClick","checkActiv","deleteTask","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeActive","setState","mainContent","state","newTask","todos","checkStatus","task","prevState","newData","counter","data","filter","length","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","newKey","Date","now","preventDefault","objectSpread","defineProperty","text","activ","_this2","filtersTodo","onSubmit","placeholder","onChange","components_TodoContent","href","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.39d5beae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoContent(props) {\r\n    console.log(props)\r\n    return (\r\n        \r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n            <ul className=\"todo-list\">\r\n               {Object.keys(props.todoList).map((todo) => {\r\n                    return (\r\n                        <li \r\n                            className={ props.todoList[todo]['activ'] ? 'activ' : 'completed' } \r\n                            key={ todo }\r\n                        >\r\n                            <div className='view'>\r\n                                <input \r\n                                    className=\"toggle\" type=\"checkbox\"\r\n                                    onClick={ () => props.checkActiv( todo ) }\r\n                                />\r\n                                <label>{ props.todoList[todo]['text'] }</label>\r\n                                <button \r\n                                    className=\"destroy\" \r\n                                    onClick={ () => props.deleteTask( todo ) }\r\n                                ></button>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n               })}\r\n            </ul>\r\n        </section>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TodoContent","import React from 'react';\r\n\r\nimport TodoContent from './components/TodoContent';\r\nimport './App.css';\r\n\r\nclass App extends React.Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            mainContent: 'all',\r\n            newTask: '',\r\n            todos: {\r\n               \r\n            }\r\n          }\r\n        \r\n\r\n        this.checkStatus = (task) => {\r\n            \r\n            this.setState((prevState) => {\r\n                let newData = prevState.todos;\r\n                newData[task]['activ'] ? \r\n                newData[task]['activ'] = false :\r\n                newData[task]['activ'] = true;\r\n                return {\r\n                    todos : newData\r\n                }\r\n            })\r\n        }\r\n\r\n        this.deleteTask = (task) => {\r\n\r\n            this.setState((prevState) => {\r\n                let newData = prevState.todos;\r\n                delete newData[task]\r\n                return {\r\n                    todos : newData\r\n                }\r\n            })\r\n        };\r\n\r\n        this.counter = () => {\r\n\r\n            let data = this.state.todos;\r\n            let test = Object.keys(data).filter((key) => {\r\n                return data[key]['activ']\r\n            })\r\n            return test.length\r\n        }\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    changeActive = () => {\r\n        this.setState({\r\n            mainContent: 'active',\r\n        })\r\n    };\r\n\r\n    handleChange(event) {\r\n        this.setState({newTask: event.target.value});\r\n      }\r\n\r\n    handleSubmit(event) {\r\n        let newKey = Date.now();\r\n        event.preventDefault();\r\n        this.setState({\r\n                todos: {\r\n                    ...this.state.todos,\r\n                    [newKey]: {\r\n                        id: newKey,\r\n                        'text': this.state.newTask,\r\n                        'activ': true,\r\n                    }\r\n                },\r\n                newTask: '',\r\n        });\r\n        \r\n       \r\n      }\r\n\r\n\r\n    render(){\r\n        \r\n\r\n        const filtersTodo = Object.keys(this.state.todos)\r\n            .filter((key) => {\r\n                return this.state.todos[key]['activ']\r\n            })\r\n            .map(key => {\r\n                return this.state.todos[key]\r\n            });\r\n\r\n        console.log(filtersTodo);\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <section className=\"todoapp\">\r\n    \r\n                    <header className=\"header\">\r\n                        <h1>todos</h1>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input className=\"new-todo\"\r\n                                placeholder=\"What needs to be done?\" \r\n                                value={this.state.newTask }\r\n                                onChange={ this.handleChange }\r\n                            />\r\n                        </form>\r\n                        \r\n                    </header>\r\n    \r\n                    <TodoContent \r\n                        todoList={ (this.state.mainContent === 'active') ? filtersTodo : this.state.todos } \r\n                        checkActiv={ this.checkStatus }\r\n                        deleteTask={ this.deleteTask }\r\n                    />\r\n    \r\n                    <footer className=\"footer\" >\r\n                        <span className=\"todo-count\"><strong>{ this.counter() }</strong> items left</span>\r\n                        <ul className=\"filters\">\r\n                            <li>\r\n                                <a href=\"#123\" className=\"selected\">All</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#11\" onClick={ this.changeActive }>Active</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#11\">Completed</a>\r\n                            </li>\r\n                        </ul>\r\n                        <button className=\"clear-completed\" ></button>\r\n                    </footer>\r\n    \r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}