{"version":3,"sources":["components/TodoContent.js","App.js","index.js"],"names":["TodoContent","props","react_default","a","createElement","className","id","type","htmlFor","Object","keys","todoList","map","todo","key","onClick","checkActiv","deleteTask","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","f","condition","filtersTodo","state","todos","filter","setState","mainContent","stateContent","filterTodos","newTask","checkStatus","task","prevState","newData","counter","data","length","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","newKey","Date","now","preventDefault","objectSpread","defineProperty","text","activ","_this2","onSubmit","placeholder","onChange","components_TodoContent","href","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9896fa29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoContent(props) {\r\n    \r\n    return (\r\n        \r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n            <ul className=\"todo-list\">\r\n               {Object.keys(props.todoList).map((todo) => {\r\n                    return (\r\n                        <li \r\n                            className={ props.todoList[todo]['activ'] ? 'activ' : 'completed' } \r\n                            key={ todo }\r\n                        >\r\n                            <div className='view'>\r\n                                <input \r\n                                    className=\"toggle\" type=\"checkbox\"\r\n                                    onClick={ () => props.checkActiv( todo ) }\r\n                                />\r\n                                <label>{ props.todoList[todo]['text'] }</label>\r\n                                <button \r\n                                    className=\"destroy\" \r\n                                    onClick={ () => props.deleteTask( todo ) }\r\n                                ></button>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n               })}\r\n            </ul>\r\n        </section>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TodoContent","import React from 'react';\n\nimport TodoContent from './components/TodoContent';\nimport './App.css';\n\nclass App extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stateContent: 'all',\n            mainContent: true,\n            newTask: '',\n            todos: {},\n            filterTodos: [],\n          }\n        \n\n        this.checkStatus = (task) => {\n            \n            this.setState((prevState) => {\n                let newData = prevState.todos;\n                newData[task]['activ'] ? \n                newData[task]['activ'] = false :\n                newData[task]['activ'] = true;\n                return {\n                    todos : newData\n\n                }\n            })\n        }\n\n        this.deleteTask = (task) => {\n\n            this.setState((prevState) => {\n                let newData = prevState.todos;\n                delete newData[task]\n                return {\n                    todos : newData\n                }\n            })\n        };\n\n        this.counter = () => {\n\n            let data = this.state.todos;\n            let test = Object.keys(data).filter((key) => {\n                return data[key]['activ']\n            })\n            return test.length\n        }\n\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        \n\n    };\n\n    f = (condition) => {\n        let filtersTodo = [];\n        if(condition === 'active'){\n            filtersTodo = Object.keys(this.state.todos)\n            .filter((key) => {\n                return this.state.todos[key]['activ']\n            })\n            .map(key => {\n                return this.state.todos[key]\n            });\n            this.setState({\n                mainContent: false,\n            })\n        }else if(condition === 'completed'){\n            filtersTodo = Object.keys(this.state.todos)\n            .filter((key) => {\n                return !this.state.todos[key]['activ']\n            })\n            .map(key => {\n                return this.state.todos[key]\n            });\n            this.setState({\n                mainContent: false,\n            })\n        }else if(condition === 'all'){\n            this.setState({\n                mainContent: true,\n            })\n        }\n\n        this.setState({\n            stateContent: condition,\n            filterTodos: filtersTodo,\n        })\n    }\n\n\n    handleChange(event) {\n        this.setState({newTask: event.target.value});\n      }\n\n    handleSubmit(event) {\n        let newKey = Date.now();\n        event.preventDefault();\n        this.setState({\n                todos: {\n                    ...this.state.todos,\n                    [newKey]: {\n                        id: newKey,\n                        'text': this.state.newTask,\n                        'activ': true,\n                    }\n                },\n                newTask: '',\n        });\n      }\n\n\n\n    render(){\n        \n        return (\n            <div className=\"App\">\n                <section className=\"todoapp\">\n    \n                    <header className=\"header\">\n                        <h1>todos</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <input className=\"new-todo\"\n                                placeholder=\"What needs to be done?\" \n                                value={this.state.newTask }\n                                onChange={ this.handleChange }\n                            />\n                        </form>\n                    </header>\n    \n                    <TodoContent \n                        todoList={ (this.state.mainContent) ? this.state.todos : this.state.filterTodos } \n                        checkActiv={ this.checkStatus }\n                        deleteTask={ this.deleteTask }\n                    />\n    \n                    <footer className=\"footer\" >\n                        <span className=\"todo-count\"><strong>{ this.counter() }</strong> items left</span>\n                        <ul className=\"filters\">\n                            <li>\n                                <a href=\"#1\" className=\"selected\" onClick={ () => { this.f('all') } }>All</a>\n                            </li>\n                            <li>\n                                <a href=\"#1\" onClick={ () => { this.f('active') } }>Active</a>\n                            </li>\n                            <li>\n                                <a href=\"#1\" onClick={ () => {this.f('completed')} }>Completed</a>\n                            </li>\n                        </ul>\n                        <button className=\"clear-completed\" ></button>\n                    </footer>\n    \n                </section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}