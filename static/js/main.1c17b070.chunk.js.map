{"version":3,"sources":["components/TodoContent.js","App.js","index.js"],"names":["TodoContent","props","react_default","a","createElement","className","id","type","htmlFor","Object","keys","todoList","map","todo","key","onClick","checkActiv","deleteTask","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","todos","generateNewId","i","concat","toConsumableArray","getRandomIntInclusive","join","min","max","Math","ceil","floor","random","addTodo","event","newTodo","target","value","newKey","setState","objectSpread","defineProperty","text","activ","checkStatus","task","prevState","newData","counter","data","filter","length","filterActive","placeholder","onKeyPress","components_TodoContent","href","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1c17b070.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoContent(props) {\r\n    \r\n    return (\r\n        \r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n            <ul className=\"todo-list\">\r\n               {Object.keys(props.todoList).map((todo) => {\r\n                    return (\r\n                        <li \r\n                            className={ props.todoList[todo]['activ'] ? 'activ' : 'completed' } \r\n                            key={ todo }\r\n                        >\r\n                            <div className='view'>\r\n                                <input \r\n                                    className=\"toggle\" type=\"checkbox\"\r\n                                    onClick ={ () => props.checkActiv( todo ) }\r\n                                />\r\n                                <label>{ props.todoList[todo]['text'] }</label>\r\n                                <button \r\n                                    className=\"destroy\" \r\n                                    onClick={ () => props.deleteTask( todo ) }\r\n                                ></button>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n               })}\r\n            </ul>\r\n        </section>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TodoContent","import React from 'react';\n\nimport TodoContent from './components/TodoContent';\nimport './App.css';\n\nclass App extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: {\n               \n            }\n          }\n        \n        this.generateNewId = () => {\n            let id = [];\n            for(let i = 0; i < 5; i++ ){\n                id = [\n                    ...id,\n                    this.getRandomIntInclusive(0,9)\n                ]\n            };\n            return id.join('')\n        }\n\n        this.getRandomIntInclusive = (min, max) => {\n            min = Math.ceil(min);\n            max = Math.floor(max);\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n          }\n        \n        this.addTodo = (event) => {\n            \n            if (event.key === \"Enter\") {\n                let newTodo = event.target.value;\n                let newKey = this.generateNewId();\n                event.target.value = '';\n                this.setState({\n                    todos: {\n                        ...this.state.todos,\n                        [newKey]: {\n                            'text': newTodo,\n                            'activ': true\n                        }\n                    }\n                })\n            }    \n        };\n\n        this.checkStatus = (task) => {\n            \n            this.setState((prevState) => {\n                let newData = prevState.todos;\n                newData[task]['activ'] ? \n                newData[task]['activ'] = false :\n                newData[task]['activ'] = true;\n                return {\n                    todos : newData\n                }\n            })\n        }\n\n        this.deleteTask = (task) => {\n\n            this.setState((prevState) => {\n                let newData = prevState.todos;\n                delete newData[task]\n                return {\n                    todos : newData\n                }\n            })\n        };\n\n        this.counter = () => {\n\n            let data = this.state.todos;\n            let test = Object.keys(data).filter((key) => {\n                return data[key]['activ']\n            })\n            return test.length\n        }\n\n        this.filterActive = () => {\n\n        }\n    };\n\n\n    render(){\n        \n        return (\n            <div className=\"App\">\n                <section className=\"todoapp\">\n    \n                    <header className=\"header\">\n                        <h1>todos</h1>\n                        <input className=\"new-todo\"\n                            placeholder=\"What needs to be done?\" \n                            onKeyPress={ this.addTodo }\n                        />\n                    </header>\n    \n                    <TodoContent \n                        todoList = { this.state.todos } \n                        checkActiv = { this.checkStatus }\n                        deleteTask = { this.deleteTask }\n                    />\n    \n                    <footer className=\"footer\" >\n                        <span className=\"todo-count\"><strong>{ this.counter() }</strong> items left</span>\n                        <ul className=\"filters\">\n                            <li>\n                                <a href=\"#123\" className=\"selected\">All</a>\n                            </li>\n                            <li>\n                                <a href=\"#11\">Active</a>\n                            </li>\n                            <li>\n                                <a href=\"#11\">Completed</a>\n                            </li>\n                        </ul>\n                        <button className=\"clear-completed\" ></button>\n                    </footer>\n    \n                </section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}